@model PublisherAndBook.ViewModels.BookEditModel

@{
    ViewBag.Title = "Edit";
}
<div class="row">
    <div class="col-12">
        <h3>Edit Book</h3>
        @using(Html.BeginForm("Edit", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(x=> x.BookId)
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.BookName, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.BookName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.BookName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.Price, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", type = "file" })
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                </div>
                <div class="col-1">
                    <img src="~/Uploads/@ViewBag.CurrentPic" class="img-thumbnail" width="40" />
                </div>
            </div>

            <div class="form-group row mb-1">
                @Html.LabelFor(x => x.PublisherId, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.DropDownListFor(x => x.PublisherId, new SelectList(ViewBag.Publishers, "PublisherId", "PublisherName"), new { @class = "form-select" })
                    @Html.ValidationMessageFor(x => x.PublisherId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row my-1 align-middle">

                <div class="col-4 offset-2">
                    <div class="form-check form-check-inline">@Html.CheckBoxFor(x => x.Discontinued, new { @class = "form-check-input" })  @Html.LabelFor(x => x.Discontinued, new { @class = "form-check-label" })</div>

                    @Html.ValidationMessageFor(x => x.Discontinued, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row my-1">

                <div class="col-10 offset-2">
                    <button type="reset" class="btn btn-secondary">Reset</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        }
    </div>
    <div class="col-12">
        @Html.ActionLink("Back to list", "Index")
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}


